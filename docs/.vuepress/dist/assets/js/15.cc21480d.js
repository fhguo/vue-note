(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{422:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"js基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js基础"}},[t._v("#")]),t._v(" JS基础")]),t._v(" "),s("h3",{attrs:{id:"_1、计算机语言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、计算机语言"}},[t._v("#")]),t._v(" 1、计算机语言")]),t._v(" "),s("ul",[s("li",[t._v("计算机语言指用于人与计算机之间通讯的语言，它是人与计算机之间传递信息的媒介。")]),t._v(" "),s("li",[t._v("计算机语言的种类非常的多，总的来说可以分成机器语言，汇编语言和高级语言三大类。")]),t._v(" "),s("li",[t._v("实际上计算机最终所执行的都是 机器语言，它是由“0”和“1”组成的二进制数，二进制是计算机语言的基础。")])]),t._v(" "),s("h3",{attrs:{id:"_2、js的组成"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、js的组成"}},[t._v("#")]),t._v(" 2、JS的组成")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/js.png")}}),t._v(" "),s("ul",[s("li",[t._v("ECMAScript")])]),t._v(" "),s("p",[t._v("​\t\tECMAScript 是由ECMA 国际（ 原欧洲计算机制造商协会）进行标准化的一门编程语言，这种语言在万维网上应用广泛，它往往被称为 JavaScript或 JScript，但实际上后两者是 ECMAScript 语言的实现和扩展。")]),t._v(" "),s("p",[t._v("​\t\tECMAScript：规定了JS的编程语法和基础核心知识，是所有浏览器厂商共同遵守的一套JS语法工业标准。")]),t._v(" "),s("p",[t._v("更多参看MDN: "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/JavaScript_technologies_overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN手册"),s("OutboundLink")],1)]),t._v(" "),s("ul",[s("li",[t._v("DOM文档对象模型")])]),t._v(" "),s("p",[t._v("​\t\t"),s("strong",[t._v("文档对象模型")]),t._v("（DocumentObject Model，简称DOM），是W3C组织推荐的处理可扩展标记语言的标准编程接口。通过 DOM 提供的接口可以对页面上的各种元素进行操作（大小、位置、颜色等）")]),t._v(" "),s("ul",[s("li",[t._v("BOM浏览器对象模型")])]),t._v(" "),s("p",[t._v("​\t\t"),s("strong",[t._v("浏览器对象模型")]),t._v("(Browser Object Model，简称BOM) 是指浏览器对象模型，它提供了独立于内容的、可以与浏览器窗口进行互动的对象结构。通过BOM可以操作浏览器窗口，比如弹出框、控制浏览器跳转、获取分辨率等。")]),t._v(" "),s("h3",{attrs:{id:"_3、js数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、js数据类型"}},[t._v("#")]),t._v(" 3、JS数据类型")]),t._v(" "),s("p",[t._v("​\tJS 把数据类型分为两类：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("简单数据类型 （Number,String,Boolean,Undefined,Null）")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/data-type.png")}})]),t._v(" "),s("li",[s("p",[t._v("复杂数据类型 （object)")])])]),t._v(" "),s("h3",{attrs:{id:"_4、获取变量数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、获取变量数据类型"}},[t._v("#")]),t._v(" 4、获取变量数据类型")]),t._v(" "),s("p",[t._v("​\t\t"),s("strong",[t._v("typeof")]),t._v(" 可用来获取检测变量的数据类型")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果 number      ")]),t._v("\n")])])]),s("p",[t._v("​\t\t不同类型的返回值：")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/detection-type.png")}}),t._v(" "),s("p",[t._v("检测是否为数组:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("instanceof 运算符")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("instanceof 可以判断一个对象是否是某个构造函数的实例")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])])])]),t._v(" "),s("li",[s("p",[t._v("Array.isArray()")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Array.isArray()用于判断一个对象是否为数组，isArray() 是 HTML5 中提供的方法")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Array"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"_5、数据类型转化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、数据类型转化"}},[t._v("#")]),t._v(" 5、数据类型转化")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("转换为字符串")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/convert-string.png")}}),t._v(" "),s("ul",[s("li",[t._v("toString() 和 String()  使用方式不一样。")]),t._v(" "),s("li",[t._v("三种转换方式，更多第三种加号拼接字符串转换方式， 这一种方式也称之为隐式转换。")])])]),t._v(" "),s("li",[s("p",[t._v("转换为数字型（重点）")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/convert-num.png")}}),t._v(" "),s("ul",[s("li",[t._v("注意 parseInt 和 parseFloat 单词的大小写，这2个是重点")]),t._v(" "),s("li",[t._v("隐式转换是我们在进行算数运算的时候，JS 自动转换了数据类型")])])]),t._v(" "),s("li",[s("p",[t._v("转换为布尔型")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/convert-bool.png")}}),t._v(" "),s("ul",[s("li",[s("p",[t._v("代表空、否定的值会被转换为 false  ，如 ''、0、NaN、null、undefined")])]),t._v(" "),s("li",[s("p",[t._v("其余值都会被转换为 true")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'小白'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Boolean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])])])])])]),t._v(" "),s("h3",{attrs:{id:"_6、运算符的分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、运算符的分类"}},[t._v("#")]),t._v(" 6、运算符的分类")]),t._v(" "),s("blockquote",[s("p",[t._v("运算符（operator）也被称为操作符，是用于实现赋值、比较和执行算数运算等功能的符号。")])]),t._v(" "),s("p",[t._v("JavaScript中常用的运算符有：")]),t._v(" "),s("ul",[s("li",[t._v("算数运算符")]),t._v(" "),s("li",[t._v("递增和递减运算符")]),t._v(" "),s("li",[t._v("比较运算符")]),t._v(" "),s("li",[t._v("逻辑运算符")]),t._v(" "),s("li",[t._v("赋值运算符")])]),t._v(" "),s("h3",{attrs:{id:"_7、switch-语句和-if-else-if-语句的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、switch-语句和-if-else-if-语句的区别"}},[t._v("#")]),t._v(" 7、switch 语句和 if else if 语句的区别")]),t._v(" "),s("ul",[s("li",[t._v("一般情况下，它们两个语句可以相互替换")]),t._v(" "),s("li",[t._v("switch...case 语句通常处理 case为比较确定值的情况， 而 if…else…语句更加灵活，常用于范围判断(大于、等于某个范围)")]),t._v(" "),s("li",[t._v("switch 语句进行条件判断后直接执行到程序的条件语句，效率更高。而if…else 语句有几种条件，就得判断多少次。")]),t._v(" "),s("li",[t._v("当分支比较少时，if… else语句的执行效率比 switch语句高。")]),t._v(" "),s("li",[t._v("当分支比较多时，switch语句的执行效率比较高，而且结构更清晰。")])]),t._v(" "),s("h3",{attrs:{id:"_8、continue、break和return"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、continue、break和return"}},[t._v("#")]),t._v(" 8、continue、break和return")]),t._v(" "),s("ul",[s("li",[t._v("continue是跳出本次循环，继续下一次循环")]),t._v(" "),s("li",[t._v("break是跳出整个循环，循环结束")]),t._v(" "),s("li",[t._v("return不仅可以退出循环，还能够返回 return 语句中的值，同时还可以结束当前的函数体内的代码")])]),t._v(" "),s("h3",{attrs:{id:"_9、构造函数的用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、构造函数的用法"}},[t._v("#")]),t._v(" 9、构造函数的用法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("构造函数：是一种特殊的函数，主要用来初始化对象，即为对象成员变量赋初始值，它总与 new 运算符一起使用。我们可以把对象中一些公共的属性和方法抽取出来，然后封装到这个函数里面。")])]),t._v(" "),s("li",[s("p",[t._v("构造函数的封装格式：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("构造函数名")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("方法名 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 函数体"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("构造函数的调用格式")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var obj = new 构造函数名(实参1，实参2，实参3)\n")])])]),s("p",[t._v("以上代码中，obj即接收到构造函数创建出来的对象。")])]),t._v(" "),s("li",[s("p",[t._v("注意事项")]),t._v(" "),s("ol",[s("li",[t._v("构造函数约定"),s("strong",[t._v("首字母大写")]),t._v("。")]),t._v(" "),s("li",[t._v("函数内的属性和方法前面需要添加 "),s("strong",[t._v("this")]),t._v(" ，表示当前对象的属性和方法。")]),t._v(" "),s("li",[t._v("构造函数中"),s("strong",[t._v("不需要 return 返回结果")]),t._v("。")]),t._v(" "),s("li",[t._v("当我们创建对象的时候，"),s("strong",[t._v("必须用 new 来调用构造函数")]),t._v("。")])])]),t._v(" "),s("li",[s("p",[t._v("其他")]),t._v(" "),s("p",[t._v("构造函数，如 Stars()，抽象了对象的公共部分，封装到了函数里面，它泛指某一大类（class）"),s("br"),t._v("\n创建对象，如 new Stars()，特指某一个，通过 new 关键字创建对象的过程我们也称为对象实例化")])]),t._v(" "),s("li",[s("p",[t._v("new关键字的作用")]),t._v(" "),s("ol",[s("li",[t._v("在构造函数代码开始执行之前，创建一个空对象；")]),t._v(" "),s("li",[t._v("修改this的指向，把this指向创建出来的空对象；")]),t._v(" "),s("li",[t._v("执行函数的代码")]),t._v(" "),s("li",[t._v("在函数完成之后，返回this---即创建出来的对象")])])])]),t._v(" "),s("h3",{attrs:{id:"_10、数组的常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10、数组的常用方法"}},[t._v("#")]),t._v(" 10、数组的常用方法")]),t._v(" "),s("ol",[s("li",[t._v("push,pop：在数组的末尾添加或删除数组元素")]),t._v(" "),s("li",[t._v("unshift，shift：在数组的头部添加或删除数组元素")]),t._v(" "),s("li",[t._v("splice(start,deleteCount,items)：删除数组中一串连续元素，返回被删除元素组成的数组")]),t._v(" "),s("li",[t._v("join()：将数组按特定的标识组合成字符串")]),t._v(" "),s("li",[t._v("slice()：截取")]),t._v(" "),s("li",[t._v("reverse()：倒序")]),t._v(" "),s("li",[t._v("concat()：将多个数组或元素组成一个新的数组返回")]),t._v(" "),s("li",[t._v("sort()：数组排序方法")])]),t._v(" "),s("h3",{attrs:{id:"_11、字符串的常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11、字符串的常用方法"}},[t._v("#")]),t._v(" 11、字符串的常用方法")]),t._v(" "),s("ol",[s("li",[t._v("charAt(下标)：获取对应下标的字符")]),t._v(" "),s("li",[t._v("charCodeAt(下标)：获取对应下标字符的编码")]),t._v(" "),s("li",[t._v("indexOf(search,start)：查找一个字符串在另一个字符串中首次出现的位置")]),t._v(" "),s("li",[t._v("lastIndexOf(search,start)：查找一个字符串在另一个字符串中最后一次出现的位置")]),t._v(" "),s("li",[t._v("substring(start,end) : 截取字符串，包括开始不包括结束，自动调整下标位置，负数默认为0")]),t._v(" "),s("li",[t._v("slice(start,end) : 截取字符串，不自动调整下标位置，负数默认为倒数   [slaɪs]")]),t._v(" "),s("li",[t._v("substr(start,length)：从start开始，截取几个")]),t._v(" "),s("li",[t._v("toUpperCase()，toLowerCase():大小写转换，不区分大小写比较")]),t._v(" "),s("li",[t._v("split(分割标识)：按分割标识将字符串分割成数组，字符串转json")]),t._v(" "),s("li",[t._v("replace(被换掉的，替换的)：替换")]),t._v(" "),s("li",[t._v("trim()：去除字符串首尾空格")])]),t._v(" "),s("h3",{attrs:{id:"_12、简单数据类型和复杂数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12、简单数据类型和复杂数据类型"}},[t._v("#")]),t._v(" 12、简单数据类型和复杂数据类型")]),t._v(" "),s("ul",[s("li",[t._v("简单类型（基本数据类型、值类型）：在存储时变量中存储的是值本身，包括string ，number，boolean，undefined，null")]),t._v(" "),s("li",[t._v("复杂数据类型（引用类型）：在存储时变量中存储的仅仅是地址（引用），通过 new 关键字创建的对象（系统对象、自定义对象），如 Object、Array、Date等；")])])])}),[],!1,null,null,null);s.default=e.exports}}]);